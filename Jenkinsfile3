
pipeline {


    parameters {
        string(name: 'repo_name', defaultValue: '', description: 'Enter docker repository name (Example: bonus-sports-data-stream)')
        string(name: 'branch_name', defaultValue: '', description: 'Enter the branch name, where you have pushed a commit (Example: main)')
        string(name: 'commit_hash', defaultValue: '', description: 'Enter the commit ID that you have made (Example: 660021df1dc7b03f42cd84cd7384797a5bd02f94)')
        string(name: 'actor', defaultValue: '', description: 'Enter the actor name (Example: Artem Dovbyk)')
        string(name: 'k8s_manifest_repo_name', defaultValue: '', description: 'Enter the repo name (Example: )')
        string(name: 'k8s_service', defaultValue: '', description: 'Enter the repo name (Example: )')            
    }



    environment {
        IMAGE_NAME = "harbor.delasport.com/sb/${repo_name}"
        K8S_DEPLOY_REPO_SLUG = "k8s-sb-platform-authentication"        
     //   GOOGLE_APPLICATION_CREDENTIALS = ".google/google-auth.json"
    }

    stages {
        stage('Validation') {
          steps {
            script {
              if ( "$repo_name" == '' || "$branch_name" == '' || "$commit_hash" == '' ) {
                currentBuild.result = 'ABORTED'
                error('Commit ID, branch name, repo name cannot be empty. Please enter a valid value')
              }
              if ( "$commit_hash".length() != 40 && "$commit_hash" =~ /^[0-9a-fA-F]+$/) {
                currentBuild.result = 'ABORTED'
                error(" Wrong commit hash, please enter the proper value")
              }

              // Determine environment based on branch
              if ("$branch_name" == "master") {
                env.ENVIRONMENT = 'prod'
              } else {
                env.ENVIRONMENT = "$branch_name"
              }
            }
          }
        }



        stage('fdfsdkfsdksdkdsksksksksdksks') {
            steps {
                script {
                   echo ${K8S_DEPLOY_REPO_SLUG}/applications/${k8sService}/env
                
                }
            }
        }
   
    }
}
